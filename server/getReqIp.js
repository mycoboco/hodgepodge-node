/*
 *  extracts an IP from a HTTP request (for express and restify)
 */

export default function _(req) {
  const ip = req?.headers?.['x-forwarded-for'] ||
    req.connection?.remoteAddress ||
    req.socket?.remoteAddress ||
    req.connection.socket?.remoteAddress;

  let m = (/(?:^|:)((?:[0-9]{1,3}\.){3}[0-9]{1,3})/).exec(ip);
  if (!m) {
    m = new RegExp(
      '(' +
        '^(?:(?:\\d|[1-9]\\d|1\\d{2}|2[0-4]\\d|25[0-5])\\.){3}' +
          '(?:\\d|[1-9]\\d|1\\d{2}|2[0-4]\\d|25[0-5])$' + '|' +
        '^(?:(?:[a-z]|[a-z][a-z\\d\\-]*[a-z\\d])\\.)*' +
          '(?:[a-z]|[a-z][a-z\\d\\-]*[a-z\\d])$' + '|' +
        '^(?:' +
          '(?:(?:[\\da-f]{1,4}:){7}(?:[\\da-f]{1,4}|:))' + '|' +
          '(?:' +
            '(?:[\\da-f]{1,4}:){6}' +
            '(?:' +
              ':[\\da-f]{1,4}' + '|' +
              '(?:' +
                '(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)' +
                '(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}' +
              ')' + '|' +
              ':' +
            ')' +
          ')' + '|' +
          '(?:' +
            '(?:[\\da-f]{1,4}:){5}' +
            '(?:' +
              '(?:(?::[\\da-f]{1,4}){1,2})' + '|' +
              ':(?:' +
                '(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)' +
                '(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}' +
              ')' + '|' +
              ':' +
            ')' +
          ')$' + '|' +
          '(?:' +
            '(?:[\\da-f]{1,4}:){4}' +
            '(?:' +
              '(?:(?::[\\da-f]{1,4}){1,3})' + '|' +
              '(?:' +
                '(?::[\\da-f]{1,4})?:' +
                '(?:' +
                  '(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)' +
                  '(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}' +
                ')' +
              ')' + '|' +
              ':' +
            ')' +
          ')' + '|' +
          '(?:' +
            '(?:[\\da-f]{1,4}:){3}' +
            '(?:' +
              '(?:(?::[\\da-f]{1,4}){1,4})' + '|' +
              '(?:' +
                '(?::[\\da-f]{1,4}){0,2}:' +
                '(?:' +
                  '(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)' +
                  '(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}' +
                ')' +
              ')' + '|' +
              ':' +
            ')' +
          ')' + '|' +
          '(?:' +
            '(?:[\\da-f]{1,4}:){2}' +
            '(?:' +
              '(?:(?::[\\da-f]{1,4}){1,5})' + '|' +
              '(?:' +
                '(?::[\\da-f]{1,4}){0,3}:' +
                '(?:' +
                  '(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)' +
                  '(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}' +
                ')' +
              ')' + '|' +
              ':' +
            ')' +
          ')' + '|' +
          '(?:' +
            '(?:[\\da-f]{1,4}:){1}' +
            '(?:' +
              '(?:(?::[\\da-f]{1,4}){1,6})' + '|' +
              '(?:' +
                '(?::[\\da-f]{1,4}){0,4}:' +
                '(?:' +
                  '(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)' +
                  '(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}' +
                ')' +
              ')' + '|' +
              ':' +
            ')' +
          ')' + '|' +
          '(?:' +
            ':(?:' +
              '(?:(?::[0-9a-f]{1,4}){1,7})' + '|' +
              '(?:' +
                '(?::[0-9a-f]{1,4}){0,5}:' +
                '(?:' +
                  '(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)' +
                  '(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}' +
                ')' +
              ')' + '|' +
              ':' +
            ')' +
          ')' +
        ')(?:%.+)?$' +
      ')',
      'i',
    ).exec(ip);
  }

  return m?.[1];
}

// eslint-disable-next-line no-constant-condition
if (false) {
  console.log(
    _({
      headers: {},
      connection: {
        remoteAddress: '192.168.0.255',
      },
    }),
  );
  console.log(
    _({
      headers: {},
      connection: {
        remoteAddress: '::1',
      },
    }),
  );
  console.log(
    _({
      headers: {},
      connection: {
        remoteAddress: '2001:0db8:0001:0000:0000:0ab9:C0A8:0102',
      },
    }),
  );
  console.log(
    _({
      headers: {},
      connection: {
        remoteAddress: '2001:db8::1234:5678:5.6.7.8',
      },
    }),
  );
}

// end of getReqIp.js
